@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix geo: <http://www.opengis.net/ont/geosparql#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix req: <https://data.surroundaustralia.com/def/olapapi/requirement/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

#
#   Dataset
#
req:d-title
	a sh:NodeShape ;
	sh:targetClass dcat:Dataset ;
    sh:message "Requirement D-title: Each Dataset _MUST_ have one and only one English title which is an English text literal, indicated using the `dcterms:title` predicate"@en ;
    sh:property [
        sh:path dcterms:title ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype rdf:langString ;
        sh:languageIn ("en") ;
    ]
.

req:d-desc
	a sh:NodeShape ;
	sh:targetClass dcat:Dataset ;
    sh:message "Requirement D-defn: Each Dataset _MUST_ have one and only one English description which is an English text literal, indicated using the `dcterms:description` predicate"@en ;
    sh:property [
        sh:path dcterms:description ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype rdf:langString ;
        sh:languageIn ("en") ;
    ]
.

req:d-id
	a sh:NodeShape ;
	sh:targetClass dcat:Dataset ;
    sh:message "Requirement D-id: Each Dataset _MUST_ have one and only one identifier, an `xsd:token`, indicated using the `dcterms:identifier` predicate. Note: this identifier must be unique within the Dataset it is part of. This uniqueness is not testable in SHACL"@en ;
    sh:property [
        sh:path dcterms:identifier ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype xsd:token ;
    ]
.

req:d-haspart
	a sh:NodeShape ;
	sh:targetClass dcat:Dataset ;
    sh:message "Requirement D-part: If a Dataset has a part, indicated by `dcterms:hasPart`, that part _MUST_ be of type `geo:FeatureCollection`"@en ;
    sh:property [
        sh:path dcterms:hasPart ;
        sh:class geo:FeatureCollection ;
    ]
.

req:d-bb
	a sh:NodeShape ;
	sh:targetClass geo:Dataset ;
    sh:message "Requirement D-bb: A Dataset _MAY_ indicate a Bounding Box geometry with a `geo:hasBoundingBox` predicate"@en ;
    sh:property [
        sh:path geo:hasBoundingBox ;
        sh:class geo:Feature ;
    ]
.

#
#   FeatureCollection
#
req:fc-title
	a sh:NodeShape ;
	sh:targetClass geo:FeatureCollection ;
    sh:message "Requirement FC-title: Each Feature Collection _MUST_ have one and only one English title which is an English text literal, indicated using the `dcterms:title` predicate"@en ;
    sh:property [
        sh:path dcterms:title ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype rdf:langString ;
        sh:languageIn ("en") ;
    ]
.

req:fc-desc
	a sh:NodeShape ;
	sh:targetClass geo:FeatureCollection ;
    sh:message "Requirement FC-defn: Each Feature Collection _MUST_ have one and only one English definition which is an English text literal, indicated using the `dcterms:description` predicate"@en ;
    sh:property [
        sh:path dcterms:description ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype rdf:langString ;
        sh:languageIn ("en") ;
    ]
.

req:fc-id
	a sh:NodeShape ;
	sh:targetClass geo:FeatureCollection ;
    sh:message "Requirement FC-id: Each Feature Collection _MUST_ have one and only one identifier, an `xsd:token`, indicated using the `dcterms:identifier` predicate. Note: this identifier must be unique within the Dataset it is part of. This uniqueness is not testable in SHACL"@en ;
    sh:property [
        sh:path dcterms:identifier ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype xsd:token ;
    ]
.

req:fc-partof
	a sh:NodeShape ;
	sh:targetClass geo:FeatureCollection ;
    sh:message "Requirement FC-part: Each Feature Collection _MUST_ indicate that it is part of one and only one `dcat:Dataset` with use of the `dcterms:isPartOf` predicate"@en ;
    sh:property [
        sh:path dcterms:isPartOf ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:class dcat:Dataset ;
    ]
.

req:fc-haspart
	a sh:NodeShape ;
	sh:targetClass geo:FeatureCollection ;
    sh:message "Requirement FC-part: If a Feature Collection has a part, indicated by `dcterms:hasPart`, that part _MUST_ be of type `geo:Feature`"@en ;
    sh:property [
        sh:path dcterms:hasPart ;
        sh:class geo:Feature ;
    ]
.

req:fc-bb
	a sh:NodeShape ;
	sh:targetClass geo:FeatureCollection ;
    sh:message "Requirement FC-bb: A Feature Collection _MAY_ indicate a Bounding Box geometry with a `geo:boundingBox` predicate"@en ;
    sh:property [
        sh:path geo:hasBoundingBox ;
        sh:class geo:Geometry ;
    ]
.

#
#   Feature
#
req:f-id
	a sh:NodeShape ;
	sh:targetClass geo:Feature ;
    sh:message "Requirement F-id: Each Feature _MUST_ have one and only one identifier, an `xsd:token`, indicated using the `dcterms:identifier` predicate. Note: this identifier must be unique within the Dataset it is part of. This uniqueness is not testable in SHACL"@en ;
    sh:property [
        sh:path dcterms:identifier ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype xsd:token ;
    ]
.

req:f-partof
	a sh:NodeShape ;
	sh:targetClass geo:Feature ;
    sh:message "Requirement F-part: Each Feature _MUST_ indicate that it is part of at least one `geo:FeatureCollection` with use of the `dcterms:isPartOf` predicate"@en ;
    sh:property [
        sh:path dcterms:isPartOf ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:class geo:FeatureCollection ;
    ]
.

# TODO: consider other, specialised, hasGeometry properties, such as hasCentroid
req:f-hasgeometry
	a sh:NodeShape ;
	sh:targetClass geo:Feature ;
    sh:message "Requirement F-geometry: Each Feature _MUST_ indicate that it has at least one `geo:Geometry` with use of the `geo:hasGeometry` predicate"@en ;
    sh:property [
        sh:path geo:hasGeometry ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:class geo:Geometry ;
    ]
.
